//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.5.1
//     from Assets/fobler (inputer)/syvyys.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Syvyys: IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Syvyys()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""syvyys"",
    ""maps"": [
        {
            ""name"": ""victim"",
            ""id"": ""8aca625b-1cf9-4877-a09d-5b4d3b1f00cb"",
            ""actions"": [
                {
                    ""name"": ""spin"",
                    ""type"": ""Value"",
                    ""id"": ""0c510d83-0672-42bf-90c5-e93d03c1efc0"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""pudotus"",
                    ""type"": ""Button"",
                    ""id"": ""1cba0d9e-d4f3-412a-976d-611ff2b2ac4a"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""reanimation_protocol"",
                    ""type"": ""Value"",
                    ""id"": ""30d2150d-6912-4531-b1f6-427c8c21c90d"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": ""WASD"",
                    ""id"": ""af542900-a88b-4606-bd03-92a089653990"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""spin"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""be6005e1-9d3e-4d78-9adb-68a841082514"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""1cf49d62-18da-47a0-acc4-be86db4e185b"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""86dc2ef2-164e-49b2-942f-045dc5588ffd"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""fccbaffb-8958-4e51-9885-69fa2888f059"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""spin"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""7ba3e3a8-bf0c-474a-a8cb-849aa39ee54e"",
                    ""path"": ""<Mouse>/middleButton"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pudotus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""68a0811e-811b-4745-b029-4708beef117e"",
                    ""path"": ""<Mouse>/press"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""pudotus"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""72389569-91f8-4eec-8584-581880fcf491"",
                    ""path"": ""<Mouse>/scroll"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""b7d4b238-1730-455e-acb4-fe00ec74a717"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""vampiresurvivor"",
                    ""id"": ""d8e9e90f-5b77-4329-8fec-ba2565650596"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f0b9e510-2931-4a32-8b33-0ca30b24ce56"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""654aee04-1b0f-4127-a38f-24417489dc73"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""019a8705-22ff-4f0e-892f-708b14148a10"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""e6f9b132-429d-4f92-9120-a51b313f87c2"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""reanimation_protocol"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // victim
        m_victim = asset.FindActionMap("victim", throwIfNotFound: true);
        m_victim_spin = m_victim.FindAction("spin", throwIfNotFound: true);
        m_victim_pudotus = m_victim.FindAction("pudotus", throwIfNotFound: true);
        m_victim_reanimation_protocol = m_victim.FindAction("reanimation_protocol", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }

    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }

    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // victim
    private readonly InputActionMap m_victim;
    private List<IVictimActions> m_VictimActionsCallbackInterfaces = new List<IVictimActions>();
    private readonly InputAction m_victim_spin;
    private readonly InputAction m_victim_pudotus;
    private readonly InputAction m_victim_reanimation_protocol;
    public struct VictimActions
    {
        private @Syvyys m_Wrapper;
        public VictimActions(@Syvyys wrapper) { m_Wrapper = wrapper; }
        public InputAction @spin => m_Wrapper.m_victim_spin;
        public InputAction @pudotus => m_Wrapper.m_victim_pudotus;
        public InputAction @reanimation_protocol => m_Wrapper.m_victim_reanimation_protocol;
        public InputActionMap Get() { return m_Wrapper.m_victim; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(VictimActions set) { return set.Get(); }
        public void AddCallbacks(IVictimActions instance)
        {
            if (instance == null || m_Wrapper.m_VictimActionsCallbackInterfaces.Contains(instance)) return;
            m_Wrapper.m_VictimActionsCallbackInterfaces.Add(instance);
            @spin.started += instance.OnSpin;
            @spin.performed += instance.OnSpin;
            @spin.canceled += instance.OnSpin;
            @pudotus.started += instance.OnPudotus;
            @pudotus.performed += instance.OnPudotus;
            @pudotus.canceled += instance.OnPudotus;
            @reanimation_protocol.started += instance.OnReanimation_protocol;
            @reanimation_protocol.performed += instance.OnReanimation_protocol;
            @reanimation_protocol.canceled += instance.OnReanimation_protocol;
        }

        private void UnregisterCallbacks(IVictimActions instance)
        {
            @spin.started -= instance.OnSpin;
            @spin.performed -= instance.OnSpin;
            @spin.canceled -= instance.OnSpin;
            @pudotus.started -= instance.OnPudotus;
            @pudotus.performed -= instance.OnPudotus;
            @pudotus.canceled -= instance.OnPudotus;
            @reanimation_protocol.started -= instance.OnReanimation_protocol;
            @reanimation_protocol.performed -= instance.OnReanimation_protocol;
            @reanimation_protocol.canceled -= instance.OnReanimation_protocol;
        }

        public void RemoveCallbacks(IVictimActions instance)
        {
            if (m_Wrapper.m_VictimActionsCallbackInterfaces.Remove(instance))
                UnregisterCallbacks(instance);
        }

        public void SetCallbacks(IVictimActions instance)
        {
            foreach (var item in m_Wrapper.m_VictimActionsCallbackInterfaces)
                UnregisterCallbacks(item);
            m_Wrapper.m_VictimActionsCallbackInterfaces.Clear();
            AddCallbacks(instance);
        }
    }
    public VictimActions @victim => new VictimActions(this);
    public interface IVictimActions
    {
        void OnSpin(InputAction.CallbackContext context);
        void OnPudotus(InputAction.CallbackContext context);
        void OnReanimation_protocol(InputAction.CallbackContext context);
    }
}
